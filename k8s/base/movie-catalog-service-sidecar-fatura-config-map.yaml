kind: ConfigMap
apiVersion: v1
metadata:
  name: movie-catalog-service-sidecar-fatura-config-map
data:
  application.yaml: |-
    # Actuator configurations https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready
    management.endpoints.web.exposure.include: '*'
    management.endpoints.web.exposure.exclude: refresh,restart,pause,resume
    management.endpoint.health.show-details: always #never always
    # Enabling for /actuator/health endpoint
    management.health.circuitbreakers.enabled: true
    management.health.ratelimiters.enabled: true
    # resilience4j configurations http://resilience4j.github.io/resilience4j/#_spring_boot_2_starter
    resilience4j.circuitbreaker:
        backends:
            fatura12v2-service-circuitbreaker:
                registerHealthIndicator: true
                # The Ring Bit Buffer must be full, before the failure rate can be calculated. For example, if the size of the Ring Buffer is 10, then at least 10 calls must evaluated, before the failure rate can be calculated 
                ringBufferSizeInClosedState: 5 # the size of the ring buffer when the CircuitBreaker is closed
                ringBufferSizeInHalfOpenState: 3 # the size of the ring buffer when the CircuitBreaker is half open
                waitDurationInOpenState: 5000 # the wait duration which specifies how long the CircuitBreaker should stay open, before it switches to half open
                failureRateThreshold: 10 # the failure rate threshold in percentage above which the CircuitBreaker should trip open and start short-circuiting calls
                eventConsumerBufferSize: 10 # The size of a event consumer buffer can be configured per CircuitBreaker
                #ignoreExceptions: #  list of exceptions which should be ignored and not increase failure count
                    #- io.github.robwin.exception.BusinessException
                #recordExceptions: # a list of exceptions which should increase failure count
                    #- java.util.concurrent.TimeoutException  
    resilience4j.retry:
        backends:
            fatura12v2-service-retry:
                maxRetryAttempts: 1
                waitDuration: 100
                #retryExceptions:
                #    - org.springframework.web.client.HttpServerErrorException
                #ignoreExceptions:
                #    - io.github.robwin.exception.BusinessException
    resilience4j.bulkhead:
        backends:
            fatura12v2-service-bulkhead:
                maxConcurrentCall: 10 # max amount of parallel executions allowed by the bulkhead
    resilience4j.ratelimiter:
        limiters:
            fatura12v2-service-ratelimiter:
                registerHealthIndicator: true
                limit-refresh-period-in-millis: 1 # the period of limit refresh, after each period rate limiter sets its permissions count to limitForPeriod value
                limit-for-period: 10 # the permissions limit for refresh period
                timeout-in-millis: 25 # the default wait for permission duration