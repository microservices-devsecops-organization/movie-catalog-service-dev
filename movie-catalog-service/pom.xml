<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>br.com.clarobr</groupId>
	<artifactId>movie-catalog-service</artifactId>
	<version>0.0.001-SNAPSHOT</version>
	<name>movie-catalog-service</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
		<!-- DevSecOps ******************************************************************************* -->
		<jacoco.plugin.version>0.8.1</jacoco.plugin.version>
		<sonar.jacoco.excludes>*model*</sonar.jacoco.excludes>
		<resilience4jVersion>0.14.1</resilience4jVersion> <!-- 0.14.1 or 1.2.0-->
		<!-- ******************************************************************************************************* -->
	</properties>

	<!-- Resilience4j ******************************************************************************* -->
	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>http://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>
	<!-- ******************************************************************************************************* -->

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- RxJava ******************************************************************************* -->
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.reactivex.rxjava2</groupId>
			<artifactId>rxjava</artifactId>
			<!-- <version>2.2.5</version> managed version pelo spring boot -->
		</dependency>
		<!-- ******************************************************************************************************* -->

		<!-- Spring Cloud Kubernetes ******************************************************************************* -->
		<!-- Load application properties from Kubernetes ConfigMaps and Secrets. Reload application properties when a ConfigMap or Secret changes. -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-kubernetes-config</artifactId>
		</dependency>
		<!-- ******************************************************************************************************* -->

		<!-- Resilience4j ******************************************************************************* -->
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-spring-boot2</artifactId>
			<version>${resilience4jVersion}</version>
		</dependency>
		
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-reactor</artifactId>
			<version>${resilience4jVersion}</version>
		</dependency>

		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-rxjava2</artifactId>
			<version>${resilience4jVersion}</version>
		</dependency>
										
		<!-- When you want to publish Retry/AsyncRetry endpoints on the Prometheus endpoint, you have to add the dependency -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<!-- ******************************************************************************************************* -->

		<!-- A Java serialization/deserialization library to convert Java Objects into JSON and back -->
		<dependency>
		  <groupId>com.google.code.gson</groupId>
		  <artifactId>gson</artifactId>
		</dependency>
		<!-- ******************************************************************************************************* -->

		<!-- GlobalProperties ******************************************************************************* -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- ******************************************************************************************************* -->
		
		<!-- Unit Tests ****************************** -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- http://hamcrest.org/JavaHamcrest/tutorial -->
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<scope>test</scope> 
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope> 
		</dependency>
		<!-- ******************************************************************************************************* -->
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- DevSecOps ******************************************************************************* -->
			<plugin>
				<!-- Unit tests are run by surefire. -->
				<!-- Classes under src/test/java called *Test are included automatically. -->
				<!-- Unit tests are run during the test phase. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<!-- Integration tests are run by failsafe. -->
				<!-- Classes under src/test/java called *IT are included automatically. -->
				<!-- Integration tests are run during the verify phase. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Code coverage plugin. 
			 This sets up code coverage for the unit tests, the integration tests, 
			 and the combined coverage of both. 
			 After running a `mvn clean install`, open `target/site/jacoco-both/index.html` in a browser. -->
			 <plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.plugin.version}</version>
				<executions>
					<execution>
						<id>jacoco-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-prepare-agent-integration</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules />
						</configuration>
					</execution>
					<execution>
						<!--  Combine the code coverage statistics generated for the unit and the integration tests. -->
						<id>jacoco-merge</id>
						<goals>
							<goal>merge</goal>
						</goals>
						<phase>verify</phase>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>*.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${project.build.directory}/jacoco-both.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>jacoco-integration</id>
						<goals>
							<goal>report-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-reportboth</id>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-both.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-both</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- OWASP DEP CHECKER https://jeremylong.github.io/DependencyCheck/dependency-check-maven/ -->
			<plugin>
              <groupId>org.owasp</groupId>
              <artifactId>dependency-check-maven</artifactId>
              <version>5.2.2</version>
              <dependencies>
			      <dependency>
					    <groupId>joda-time</groupId>
					    <artifactId>joda-time</artifactId>
					    <version>2.10.5</version>
				  </dependency>
         	  </dependencies>
              <configuration>
                  <failBuildOnCVSS>1</failBuildOnCVSS>
                  <suppressionFiles>
                        <suppressionFile>owasp-dependency-check-supression.xml</suppressionFile>
                    </suppressionFiles>
                   <formats>HTML,XML</formats> 
              </configuration>
              <executions>
                  <execution>
                      <goals>
                          <goal>check</goal>
                      </goals>
                  </execution>
              </executions>
            </plugin>
			<!--  ******************************************************************************************************* -->
		
		</plugins>
	</build>

</project>